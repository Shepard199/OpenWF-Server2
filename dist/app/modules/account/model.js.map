{"version":3,"sources":["../../../../src/app/modules/account/model.js"],"names":["Schema","account","auth","model","userid","Number","profileid","username","String","nickname","password","email","affiliateid","lang","profile","gender","height","head","current_class","experience","pvp_rating_points","banner_badge","banner_mark","banner_stripe","game_money","cry_money","crown_money","items","id","name","attached_to","config","slot","equipped","default","permanent","expired_confirmed","buy_time_utc","expiration_time_utc","seconds_left","friends","my_profile_id","to_profile_id","missions","mission_key","no_teams","setting","mode","mode_name","mode_icon","description","image","difficulty","type","time_of_day","objectives","factor","obj","Array","crownrewardsthresholds","totalperformance","bronze","silver","gold","time","crownrewards","gameroomopen","room_id","room_type","jid_created","core","teams_switched","room_name","private","players","can_start","team_balanced","min_ready_players","revision","session","status","game_progress","start_time","custom_params","friendly_fire","enemy_outlines","auto_team_balance","dead_can_chat","join_in_the_process","max_players","round_limit","class_restriction","inventory_slot","mission","kick_vote_params","success","timeout","cooldown","room_master","master"],"mappings":";;;;;;;;AAAA;;;;;;;;AAEA,IAAMA,SAAS,mBAASA,MAAxB;;AAEA,IAAMC,UAAU;AACfC,OAAM,mBAASC,KAAT,CAAe,MAAf,EAAuB,IAAIH,MAAJ,CAAW;AACvCI,UAAQC,MAD+B;AAEvCC,aAAWD,MAF4B;AAGvCE,YAAUC,MAH6B;AAIvCC,YAAUD,MAJ6B;AAKvCE,YAAUF,MAL6B;AAMvCG,SAAOH,MANgC;AAOvCI,eAAaJ,MAP0B;AAQvCK,QAAML;AARiC,EAAX,CAAvB,CADS;AAWfM,UAAS,mBAASX,KAAT,CAAe,SAAf,EAA0B,IAAIH,MAAJ,CAAW;AAC1CM,aAAWD,MAD+B;AAE1CI,YAAUD,MAFgC;AAG1CO,UAAQP,MAHkC;AAI1CQ,UAAQX,MAJkC;AAK1CY,QAAMT,MALoC;AAM1CU,iBAAeb,MAN2B;AAO1Cc,cAAYd,MAP8B;AAQ1Ce,qBAAmBf,MARuB;AAS1CgB,gBAAcb,MAT4B;AAU1Cc,eAAad,MAV6B;AAW1Ce,iBAAef,MAX2B;AAY1CgB,cAAYnB,MAZ8B;AAa1CoB,aAAWpB,MAb+B;AAc1CqB,eAAarB,MAd6B;AAe1CsB,SAAO,CAAC;AACJC,OAAIvB,MADA;AAEJwB,SAAMrB,MAFF;AAGJsB,gBAAazB,MAHT;AAIJ0B,WAAQvB,MAJJ;AAKJwB,SAAM3B,MALF;AAMJ4B,aAAU5B,MANN;AAOJ6B,YAAS7B,MAPL;AAQJ8B,cAAW9B,MARP;AASJ+B,sBAAmB/B,MATf;AAUJgC,iBAAchC,MAVV;AAWJiC,wBAAqBjC,MAXjB;AAYJkC,iBAAclC;AAZV,GAAD;AAfmC,EAAX,CAA1B,CAXM;AAyCfmC,UAAS,mBAASrC,KAAT,CAAe,SAAf,EAA0B,IAAIH,MAAJ,CAAW;AAC7CyC,iBAAepC,MAD8B;AAE7CqC,iBAAerC;AAF8B,EAAX,CAA1B,CAzCM;AA6CfsC,WAAU,mBAASxC,KAAT,CAAe,UAAf,EAA2B,IAAIH,MAAJ,CAAW;AAC5C4C,eAAapC,MAD+B;AAE5CqC,YAAUrC,MAFkC;AAG5CqB,QAAMrB,MAHsC;AAI5CsC,WAAStC,MAJmC;AAK5CuC,QAAMvC,MALsC;AAM5CwC,aAAWxC,MANiC;AAO5CyC,aAAWzC,MAPiC;AAQ5C0C,eAAa1C,MAR+B;AAS5C2C,SAAO3C,MATqC;AAU5C4C,cAAY5C,MAVgC;AAW5C6C,QAAM7C,MAXsC;AAY5C8C,eAAa9C,MAZ+B;AAa5C+C,cAAY;AACRC,WAAQhD,MADA;AAERiD,QAAK,EAAEJ,MAAOK,KAAT,EAAiB,WAAY,EAA7B;AAFG,GAbgC;AAiB5CC,0BAAwB;AACpBC,qBAAkB;AACdC,YAAQrD,MADM;AAEdsD,YAAQtD,MAFM;AAGduD,UAAMvD;AAHQ,IADE;AAMpBwD,SAAM;AACFH,YAAQrD,MADN;AAEFsD,YAAQtD,MAFN;AAGFuD,UAAMvD;AAHJ;AANc,GAjBoB;AA6B5CyD,gBAAc;AACVJ,WAAQrD,MADE;AAEVsD,WAAQtD,MAFE;AAGVuD,SAAMvD;AAHI;AA7B8B,EAAX,CAA3B,CA7CK;AAgFf0D,eAAc,mBAAS/D,KAAT,CAAe,UAAf,EAA2B,IAAIH,MAAJ,CAAW;AACnDmE,WAAS3D,MAD0C;AAEhD4D,aAAW5D,MAFqC;AAGhD6D,eAAa7D,MAHmC;AAIhD8D;AACIC,mBAAgB/D,MADpB;AAEIgE,cAAWhE,MAFf;AAGIiE,YAASjE,MAHb;AAIIkE,YAASlE,MAJb;AAKImE,cAAWnE,MALf;AAMIoE,kBAAepE,MANnB;AAOIqE,sBAAmBrE,MAPvB;AAQIsE,aAAUtE;AARd,uCASa,EAAE6C,MAAOK,KAAT,EAAiB,WAAY,EAA7B,EATb,yCAUiB,EAAEL,MAAOK,KAAT,EAAiB,WAAY,EAA7B,EAVjB,SAJgD;AAgBhDqB,WAAS;AACLnD,OAAIpB,MADC;AAELwE,WAAQxE,MAFH;AAGLyE,kBAAezE,MAHV;AAIL0E,eAAY1E,MAJP;AAKLsE,aAAUtE;AALL,GAhBuC;AAuBhD2E,iBAAe;AACXC,kBAAe5E,MADJ;AAEX6E,mBAAgB7E,MAFL;AAGX8E,sBAAmB9E,MAHR;AAIX+E,kBAAe/E,MAJJ;AAKXgF,wBAAqBhF,MALV;AAMXiF,gBAAajF,MANF;AAOXkF,gBAAalF,MAPF;AAQXmF,sBAAmBnF,MARR;AASXoF,mBAAgBpF;AATL,GAvBiC;AAkChDqF,WAAQ;AACJjD,gBAAapC;AADT,GAlCwC;AAqChDsF,oBAAkB;AACdC,YAASvF,MADK;AAEdwF,YAASxF,MAFK;AAGdyF,aAAUzF,MAHI;AAIdsE,aAAUtE;AAJI,GArC8B;AA2ChD0F,eAAa;AACTC,WAAQ3F,MADC;AAETsE,aAAUtE;AAFD;AA3CmC,EAAX,CAA3B;AAhFC,CAAhB;;kBAkIeP,O","file":"model.js","sourcesContent":["import mongoose from 'mongoose';\n\nconst Schema = mongoose.Schema;\n\nconst account = {\n\tauth: mongoose.model('User', new Schema({ \n\t\tuserid: Number,\n\t\tprofileid: Number,\n\t\tusername: String, \n\t\tnickname: String,\n\t\tpassword: String, \n\t\temail: String,\n\t\taffiliateid: String,\n\t\tlang: String\n\t})),\n\tprofile: mongoose.model('Profile', new Schema({ \n\t    profileid: Number,\n\t    nickname: String,\n\t    gender: String,\n\t    height: Number,\n\t    head: String,\n\t    current_class: Number,\n\t    experience: Number,\n\t    pvp_rating_points: Number,\n\t    banner_badge: String,\n\t    banner_mark: String,\n\t    banner_stripe: String,\n\t    game_money: Number,\n\t    cry_money: Number,\n\t    crown_money: Number,\n\t    items: [{\n\t        id: Number, \n\t        name: String, \n\t        attached_to: Number,\n\t        config: String, \n\t        slot: Number, \n\t        equipped: Number, \n\t        default: Number, \n\t        permanent: Number, \n\t        expired_confirmed: Number, \n\t        buy_time_utc: Number, \n\t        expiration_time_utc: Number, \n\t        seconds_left: Number\n\t    }]\n\t})),\n\tfriends: mongoose.model('Friends', new Schema({ \n\t\tmy_profile_id: Number,\n\t\tto_profile_id: Number\n\t})),\n\tmissions: mongoose.model('Missions', new Schema({ \n\t    mission_key: String,\n\t    no_teams: String,\n\t    name: String,\n\t    setting: String,\n\t    mode: String,\n\t    mode_name: String,\n\t    mode_icon: String,\n\t    description: String,\n\t    image: String,\n\t    difficulty: String,\n\t    type: String,\n\t    time_of_day: String,\n\t    objectives: {\n\t        factor: String,\n\t        obj: { type : Array , \"default\" : [] }\n\t    },\n\t    crownrewardsthresholds: {\n\t        totalperformance: {\n\t            bronze: String,\n\t            silver: String,\n\t            gold: String\n\t        },\n\t        time: {\n\t            bronze: String,\n\t            silver: String,\n\t            gold: String\n\t        }\n\t    },\n\t    crownrewards: {\n\t        bronze: String,\n\t        silver: String,\n\t        gold: String\n\t    }\n\t})),\n\tgameroomopen: mongoose.model('GameRoom', new Schema({ \n\t\troom_id: String,\n\t    room_type: String,\n\t    jid_created: String,\n\t    core: {\n\t        teams_switched: String,\n\t        room_name: String,\n\t        private: String,\n\t        players: String,\n\t        can_start: String,\n\t        team_balanced: String,\n\t        min_ready_players: String,\n\t        revision: String,\n\t        players: { type : Array , \"default\" : [] },\n\t        team_colors: { type : Array , \"default\" : [] }\n\t    },\n\t    session: {\n\t        id: String,\n\t        status: String,\n\t        game_progress: String,\n\t        start_time: String,\n\t        revision: String \n\t    },\n\t    custom_params: {\n\t        friendly_fire: String,\n\t        enemy_outlines: String,\n\t        auto_team_balance: String,\n\t        dead_can_chat: String,\n\t        join_in_the_process: String,\n\t        max_players: String,\n\t        round_limit: String,\n\t        class_restriction: String,\n\t        inventory_slot: String\n\t    },\n\t    mission:{\n\t        mission_key: String,\n\t    },\n\t    kick_vote_params: {\n\t        success: String,\n\t        timeout: String,\n\t        cooldown: String,\n\t        revision: String\n\t    },\n\t    room_master: {\n\t        master: String,\n\t        revision: String\n\t    }\n\t}))\n}\n\nexport default account;\n"]}